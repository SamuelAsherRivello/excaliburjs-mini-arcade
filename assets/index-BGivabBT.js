var pi=Object.defineProperty;var gi=(r,i,e)=>i in r?pi(r,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[i]=e;var s=(r,i,e)=>gi(r,typeof i!="symbol"?i+"":i,e);import{f as o,u as F,_ as u,v as _i,o as z,w as wi,x as $,h as w,y as Y,z as Z,b as v,A as mi,B as C,C as yi,D as fi,g as vi,a as K,E as Ci,F as Si,G as _e,H as Pi,I as Ai}from"./vendor-B7mi3kXY.js";import{S as N,A as xi,a as we,b as me,c as ye,B as fe,d as ae,e as ve,f as Ce,g as Se,H as P,h as Pe,M as p,E as U,U as d,R as g,i as b,j as H,O as q,L as Q,C as zi,k as bi,l as ki,m as Hi,n as Di,G as Gi,o as j,P as Ae,p as xe,T as ze,q as be,r as ke,s as si,F as He,t as De,u as Ge,v as Fe,w as Ie,x as Ve,y as Me,K as Te,z as Re,D as Le,I as Be,J as We,N as Oe,Q as Ee,V as Ue,W as $e,X as Ye,Y as Ke,Z as Ne,_ as je,$ as Je,a0 as Xe,a1 as qe,a2 as Qe,a3 as Ze,a4 as et,a5 as tt,a6 as it,a7 as at,a8 as st,a9 as ot,aa as rt,ab as nt,ac as lt,ad as dt,ae as ct,af as ht,ag as ut,ah as pt,ai as gt,aj as _t,ak as wt,al as mt,am as yt,an as ft,ao as vt,ap as Ct,aq as St,ar as Pt,as as At,at as xt,au as zt,av as bt,aw as kt,ax as Ht,ay as Dt,az as Gt,aA as Ft,aB as It,aC as Vt,aD as Mt,aE as Tt,aF as Rt,aG as Lt,aH as Bt,aI as Wt,aJ as Ot,aK as Et,aL as Ut,aM as $t,aN as Yt,aO as Kt,aP as Nt}from"./game-core-nXy05BVr.js";(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))t(a);new MutationObserver(a=>{for(const l of a)if(l.type==="childList")for(const c of l.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&t(c)}).observe(document,{childList:!0,subtree:!0});function e(a){const l={};return a.integrity&&(l.integrity=a.integrity),a.referrerPolicy&&(l.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?l.credentials="include":a.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function t(a){if(a.ep)return;a.ep=!0;const l=e(a);fetch(a.href,l)}})();const A=new N;A.add("Asteroid01",new o(xi));A.add(we,new o(we));A.add(me,new o(me));A.add(ye,new o(ye));A.add(fe,new o(fe));A.add(ae,new o(ae));A.add(ve,new o(ve));A.add(Ce,new F(Ce));A.add(Se,new F(Se));A.add(P,new F(P));A.add(Pe,new F(Pe));const T=A;class oi{static setPositionWrapAroundScreen(i,e,t){const a=i.anchor.x*i.width,l=i.anchor.y*i.height;if(t){let c=i.pos.x,h=i.pos.y;i.pos.x-a+i.width<0?c=e.drawWidth+a:i.pos.x-a>e.drawWidth&&(c=-i.width+a),i.pos.y-l+i.height<0?h=e.drawHeight+l:i.pos.y-l>e.drawHeight&&(h=-i.height+l),i.pos!=new u(c,h)&&(i.pos=new u(c,h))}else{let c=i.pos.x,h=i.pos.y;i.pos.x-a<0?c=e.drawWidth+a:i.pos.x-a>e.drawWidth&&(c=-a),i.pos.y-l<0?h=e.drawHeight+l:i.pos.y-l>e.drawHeight&&(h=-l),i.pos=new u(c,h)}}}const Fi={duration:1e3,delay:0,directionRadians:0};class J{static async particlesAddDustAsync(i,e){e={...Fi,...e};const t=new _i({});return t.pos=i.pos,t.radius=5,t.emitRate=300,t.particleLife=100,t.color=z.White,t.opacity=.2,t.emitterType=wi.Circle,t.minSize=5,t.maxSize=20,t.minVel=50,t.maxVel=100,t.minAngle=0,t.maxAngle=Math.PI,t.fadeFlag=!0,t.isEmitting=!0,J.getParticleParent().add(t),await p.awaitTimeAsync(e.duration),t.kill(),Promise.resolve()}static getParticleParent(){return U.instance}}const jt={pos:new u(100,100),velocity:new u(5,5),onAddedCallback:r=>{},generation:3,imageSource:T.get("Asteroid01"),layoutConfiguration:{sizeLayoutConfiguration:{width:{value:30,unit:d.Percent},height:{value:30,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeWidth}}},x=class x extends H{constructor(e){e={...jt,...e};super(e);s(this,"RotationSpeed",Math.random()*.001-.003);s(this,"_isDestroying",!1);s(this,"_generation");s(this,"_health",new q(x.HealthInitial));s(this,"_onAddedCallback");this.pos=e.pos,this.vel=e.velocity,this._generation=e.generation,this.body.useGravity=!1,this._onAddedCallback=e.onAddedCallback,this._onAddedCallback(this),this._health.onValueChanged.addEventListener(this.health_onValueChanged.bind(this))}get configuration(){return this._configuration}get health(){return this._health}get generation(){return this._generation}get isDestroying(){return this._isDestroying}static createAndAdd(e,t,a,l,c){for(let h=0;h<t;h++){const B=c||new u(Math.random()*e.drawWidth,Math.random()*e.drawHeight),V=new u(Math.random()*100-50,Math.random()*100-50),y=jt;y.pos=B,y.velocity=V,y.generation=a,y.onAddedCallback=l;const M=new x(y);M.name="Asteroid",e.add(M)}}async onInitialize(e){const t=this.configuration.imageSource.toSprite(),a=this._generation/x.AsteroidMaxGeneration;t.scale=this.layoutEngine.getCalculatedScale(this.configuration.imageSource).scale(a),this.graphics.use(t);const l=.5;this.collider.set(new $({radius:Math.max(t.width/2,t.height/2)*l})),this.actions.clearActions(),await p.scaleUpAndFadeUpAsync(this)}onPreUpdate(e,t){this.rotation+=this.RotationSpeed,this.setPositionWrapAroundScreen(e)}setPositionWrapAroundScreen(e){oi.setPositionWrapAroundScreen(this,e,!0)}async destroy(){this._isDestroying=!0,this.vel=w(0,0),this.collider.clear(),this._generation>1&&Math.round(Math.random()*2)===1&&x.createAndAdd(U.instance,3,this._generation-1,this._onAddedCallback,this.pos),this.actions.clearActions(),J.particlesAddDustAsync(this,{duration:100}),await p.scaleDownAndFadeDownAsync(this,{duration:100}),this.onDestroyComplete()}health_onValueChanged(e,t){t<=0&&this.destroy()}onDestroyComplete(){this.kill()}};s(x,"AsteroidMaxGeneration",3),s(x,"AsteroidCountInitial",3),s(x,"HealthInitial",100),s(x,"HealthDelta",x.HealthInitial);let E=x;const Ii=Y.create("player"),ri=Y.create("bullet"),ni=Y.create("asteroid"),Vi=Z.collidesWith([]),Mi=Z.collidesWith([ni]),Ti=Z.collidesWith([ri]),ee={Player:Vi,Bullet:Mi,Asteroid:Ti,PlayerGroup:Ii,BulletGroup:ri,AsteroidGroup:ni},li={imageSource:T.get("Bullet01"),collisionGroup:ee.Bullet,collisionType:v.Active,layoutConfiguration:{sizeLayoutConfiguration:{width:{value:20,unit:d.Percent},height:{value:20,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeWidth}}};class di extends H{constructor(e){e={...li,...e};super(e);s(this,"_lifespan",1e3);s(this,"_isDestroying",!1);this.vel=e.vel??w(0,0),this.body.useGravity=!1}get configuration(){return this._configuration}get isDestroying(){return this._isDestroying}async onInitialize(e){const t=this.configuration.imageSource.toSprite();t.scale=this.layoutEngine.getCalculatedScale(this.configuration.imageSource),this.graphics.use(t);const a=.25;this.collider.set(new $({radius:Math.max(t.width/2,t.height/2)*a})),this.rotation=Math.atan2(this.vel.y,this.vel.x),this.on("collisionstart",l=>{l.other instanceof E&&(this._isDestroying||(l.other.health.value-=E.HealthDelta,this.destroy()))}),e.clock.schedule(()=>{this.onDestroyComplete()},this._lifespan),this.actions.clearActions(),await p.scaleUpAndFadeUpAsync(this,{duration:100})}async destroy(){this._isDestroying=!0,this.vel.scale(.1),this.collider.clear(),T.get("Hit02").play(),this.actions.clearActions(),await p.scaleDownAndFadeDownAsync(this,{duration:100}),this.onDestroyComplete()}async onDestroyComplete(){this.isKilled||this.kill()}}s(di,"Speed",500);const ce={imageSource:T.get("Ship01"),collisionGroup:ee.Player,collisionType:v.Active,layoutConfiguration:{sizeLayoutConfiguration:{width:{value:15,unit:d.Percent},height:{value:15,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeWidth},positionLayoutConfiguration:{x:{value:50,unit:d.Percent},y:{value:50,unit:d.Percent},relativeTo:g.Screen}}};class Ri extends H{constructor(e=ce){e={...ce,...e},e.collisionType=v.Passive;super(e);s(this,"MaxRotationSpeed",.2);s(this,"RotationAcceleration",.01);s(this,"AngularDrag",.01);s(this,"ThrustForce",200/Q.RetroFactor);s(this,"MaxSpeed",300/Q.RetroFactor);s(this,"LinearDrag",.01);s(this,"BulletSpeed",800);s(this,"_currentRotationSpeed",0);s(this,"_rotationHoldTime",0);s(this,"_canShoot",!0);s(this,"_shootCooldown",250)}get configuration(){return this._configuration}onInitialize(){const e=this.configuration.imageSource.toSprite();e.scale=this.layoutEngine.getCalculatedScale(this.configuration.imageSource),this.graphics.add(e),this.collider.set(new $({radius:Math.max(e.width/2,e.height/2)}))}onPreUpdate(e,t){this.applyDrag(t),this.setPositionWrapAroundScreen(e),this.updateShootCooldown(t)}rotate(e,t,a){a!==0?(this._rotationHoldTime+=t,this._currentRotationSpeed+=this.RotationAcceleration*t*a):(this._rotationHoldTime=0,this._currentRotationSpeed>0?this._currentRotationSpeed=Math.max(0,this._currentRotationSpeed-this.AngularDrag*t):this._currentRotationSpeed<0&&(this._currentRotationSpeed=Math.min(0,this._currentRotationSpeed+this.AngularDrag*t)));const l=Math.min(this.MaxRotationSpeed,this._rotationHoldTime/500*this.MaxRotationSpeed);this._currentRotationSpeed=mi(this._currentRotationSpeed,-l,l),this.rotation+=this._currentRotationSpeed}move(e,t){const a=w(Math.sin(this.rotation)*this.ThrustForce,-Math.cos(this.rotation)*this.ThrustForce);this.vel=this.vel.add(a.scale(t/1e3)),this.vel.size>this.MaxSpeed&&(this.vel=this.vel.normalize().scale(this.MaxSpeed))}async shoot(e,t){if(!this._canShoot)return;this._canShoot=!1,this._shootCooldown=250;const a=w(Math.sin(this.rotation)*this.BulletSpeed,-Math.cos(this.rotation)*this.BulletSpeed),l=this.pos.add(a.normalize().scale(this.width/2)),c=li;c.pos=l,c.vel=a;const h=new di(c);h.z=this.z-1,e.add(h),this.actions.clearActions(),await p.cameraShakeAsync(e,zi.Light),T.get("Shoot01").play()}applyDrag(e){const t=this.vel.negate().scale(this.LinearDrag*this.vel.size);this.vel=this.vel.add(t.scale(e/1e3))}setPositionWrapAroundScreen(e){oi.setPositionWrapAroundScreen(this,e,!0)}updateShootCooldown(e){this._canShoot||(this._shootCooldown-=e,this._shootCooldown<=0&&(this._canShoot=!0))}}var _=(r=>(r[r.None=0]="None",r[r.GameInitialized=1]="GameInitialized",r[r.GameRunning=2]="GameRunning",r[r.GameEnded=3]="GameEnded",r))(_||{});class Li extends bi{constructor(){super(...arguments);s(this,"_score",new q(0));s(this,"_lives",new q(0));s(this,"_gameState",new q(0))}get score(){return this._score}get lives(){return this._lives}get gameState(){return this._gameState}async initializeAsync(){await super.initializeAsync(),this._score.value=-1,this._lives.value=-1,this._score.refreshValueChanged(),this._lives.refreshValueChanged()}}class Bi extends ki{constructor(e){super();s(this,"_ui");this._ui=new Hi(e)}set score(e){const t=e.toString().padStart(3,"0");this._ui.textUpperLeft=`Score: ${t}​`}set lives(e){e=Math.max(0,e);const t="❤️",a="🖤",l=3,c=t.repeat(e),h=a.repeat(Math.max(0,l-e)),B=c+h;this._ui.textUpperRight=`Lives: ${B}`}set buttons(e){this._ui.textLowerLeft=e}set status(e){this._ui.textCenter=e}async initializeAsync(){super.initializeAsync(),this.buttons="⬅️⬆️​​➡️​🟦​, F, R​",this.status=""}onInitialize(){this.addChild(this._ui)}}class Wi{constructor(){s(this,"_lastPointerDownTime",0);s(this,"_isPointerDown",!1);s(this,"_isPointerDoubleClick",!1);s(this,"actions");this.actions={left:{wasPressed:!1,isHeld:!1,wasReleased:!1},down:{wasPressed:!1,isHeld:!1,wasReleased:!1},right:{wasPressed:!1,isHeld:!1,wasReleased:!1},up:{wasPressed:!1,isHeld:!1,wasReleased:!1},action:{wasPressed:!1,isHeld:!1,wasReleased:!1},fullScreen:{wasPressed:!1,isHeld:!1,wasReleased:!1},resetGame:{wasPressed:!1,isHeld:!1,wasReleased:!1}},U.instance.input.pointers.primary.on("down",()=>{const i=Date.now();i-this._lastPointerDownTime<150&&(this._isPointerDoubleClick=!0),this._lastPointerDownTime=i,this._isPointerDown=!0}),U.instance.input.pointers.primary.on("up",()=>{this._isPointerDown=!1})}update(i,e){this.updateAction(i,"left",[C.A,C.Left]),this.updateAction(i,"right",[C.D,C.Right]),this.updateAction(i,"up",[C.W,C.Up]),this.updateAction(i,"down",[C.S,C.Down]),this.updateAction(i,"action",[C.Space,C.Enter]),this.updateAction(i,"fullScreen",[C.F]),this.updateAction(i,"resetGame",[C.R]),this.actions.action.isHeld=this.actions.action.wasPressed||this._isPointerDown,this.actions.action.wasPressed=this.actions.action.wasPressed||this._isPointerDown,this.actions.fullScreen.wasPressed=this.actions.fullScreen.wasPressed,this._isPointerDoubleClick=!1,this._isPointerDown=!1}updateAction(i,e,t){const a=i.input.keyboard;this.actions[e]={wasPressed:t.some(l=>a.wasPressed(l)),isHeld:t.some(l=>a.isHeld(l)),wasReleased:t.some(l=>a.wasReleased(l))}}}class Oi extends Di{constructor(){super();s(this,"input");this.input=new Wi}update(e,t){this.input.update(e,t)}get left(){return this.input.actions.left}get right(){return this.input.actions.right}get up(){return this.input.actions.up}get down(){return this.input.actions.down}get action(){return this.input.actions.action}get fullScreen(){return this.input.actions.fullScreen}get resetGame(){return this.input.actions.resetGame}}const re=class re extends Gi{constructor(){console.log("retroFactor",Q.RetroFactor);const e={canvasElementId:"excaliburjs-game-canvas",width:900/Q.RetroFactor,height:1600/Q.RetroFactor,displayMode:yi.FitContainer,fixedUpdateFps:30,maxFps:120,physics:{enabled:!0,solver:fi.Realistic,gravity:w(0,re.GravityY)},antialiasing:{pixelArtSampler:!0,nativeContextAntialiasing:!1,multiSampleAntialiasing:!0,filtering:vi.Pixel,canvasImageRendering:"auto"},suppressPlayButton:!0};super(e);s(this,"_view");s(this,"_model");s(this,"_controller")}get model(){return this._model}get view(){return this._view}get controller(){return this._controller}async initializeAsync(){await super.initializeAsync(),this._view=new Bi(this),await this._view.initializeAsync(),this.currentScene.add(this._view),this._controller=new Oi,await this._controller.initializeAsync(),this._model=new Li,await this._model.initializeAsync(),this._model.score.onValueChanged.addEventListener(this.model_Score_onValueChanged.bind(this)),this._model.lives.onValueChanged.addEventListener(this.model_Lives_onValueChanged.bind(this)),this._model.gameState.onValueChanged.addEventListener(this.model_GameState_onValueChanged.bind(this))}onPreUpdate(e,t){super.onPreUpdate(e,t),this.controller.update(e,t),this.controller.fullScreen.wasPressed&&(e.screen.isFullScreen?e.screen.exitFullScreen():e.screen.goFullScreen()),this.controller.resetGame.wasPressed&&location.reload()}onModelChanged(){}model_Score_onValueChanged(e,t){this._view.score=t,this.onModelChanged()}model_Lives_onValueChanged(e,t){this._view.lives=t,this.onModelChanged()}model_GameState_onValueChanged(e,t){this.onModelChanged()}};s(re,"GravityY",1e3);let G=re;class Ei extends G{constructor(){super();s(this,"_background");s(this,"_player");s(this,"_asteroidCount",new q(0))}async initializeAsync(){if(this.isInitialized)return Promise.resolve();await T.initializeAsync(),this.start(T.loader),await super.initializeAsync(),this.initializeBackgrounds(),this.initializePlayer(),this.initializeAsteroids(),this._asteroidCount.onValueChanged.addEventListener(this.onModelChanged.bind(this)),this.model.score.value=0,this.model.lives.value=3,this.model.gameState.value=_.GameInitialized}initializeBackgrounds(){const e={imageSource:T.get("Background02"),isScrolling:!0,scrollVelocity:w(15,30)};this._background=new j(e),this.currentScene.add(this._background)}initializePlayer(){this._player=new Ri(ce),this.currentScene.add(this._player)}initializeAsteroids(){E.createAndAdd(this,E.AsteroidCountInitial,E.AsteroidMaxGeneration,this.asteroid_onCreate.bind(this))}handlePlayerInput(e,t){this._player&&(this.controller.left.isHeld?this._player.rotate(e,t,-1):this.controller.right.isHeld?this._player.rotate(e,t,1):this._player.rotate(e,t,0),this.controller.up.isHeld&&this._player.move(e,t),this.controller.action.wasPressed&&this._player.shoot(e,t))}onPreUpdate(e,t){super.onPreUpdate(e,t),this.handlePlayerInput(e,t)}onModelChanged(){this.model.gameState.value===_.GameInitialized&&(console.log(`GameState: ${_[this.model.gameState.value]}`),this.model.gameState.value=_.GameRunning,console.log(`GameState: ${_[this.model.gameState.value]}`)),this.model.gameState.value===_.GameRunning&&(this.model.lives.value==0&&(console.log("No Lives"),this.model.gameState.value=_.GameEnded,console.log(`GameState: ${_[this.model.gameState.value]}`)),this._asteroidCount.value==0&&(console.log("No Asteroids"),this.model.gameState.value=_.GameEnded,console.log(`GameState: ${_[this.model.gameState.value]}`))),this.model.gameState.value,_.GameEnded}asteroid_onCreate(e){this._asteroidCount.value++,e.on("postkill",()=>{this._asteroidCount.value--,this.model.score.value+=10*e.generation})}}const L=new N;L.add(Ae,new o(Ae));L.add(xe,new o(xe));L.add(ze,new o(ze));L.add(be,new o(be));L.add(ke,new o(ke));L.add(ae,new o(ae));L.add(P,new F(P));const f=L;class Ui extends K{constructor(){super({collisionType:v.Passive,collisionGroup:ee.Player});s(this,"_moveSpeed",100);s(this,"shadowVisible",!0);s(this,"_shadowTintCache");s(this,"_shadowTint",new z(0,0,0,.2));s(this,"_shadowOffset",w(3,3));s(this,"_flipHorizontal",!1)}onInitialize(){let e=f.get("Paddle01").toSprite();e=si.resizeSpriteWithin(e,100,50),this.graphics.use(e),this.collider.set(new $({radius:Math.max(e.width,e.height)/2})),this.graphics.onPreDraw=t=>{if(!(!this.shadowVisible||!this.graphics)){this._shadowTintCache=t.tint,t.tint=this._shadowTint;for(const a of Object.values(this.graphics.graphics))a.draw(t,-a.width*this.anchor.x+this._shadowOffset.x,-a.height*this.anchor.y+this._shadowOffset.y);t.tint=this._shadowTintCache}}}async move(e,t,a){a=a.scale(this._moveSpeed*(t/1e3)),this.pos=this.pos.add(a),a.x!==0&&(this._flipHorizontal=a.x>0,this.graphics.flipHorizontal=this._flipHorizontal),p.clearActions(this),await p.scaleDownAndUpAsync(this),await p.awaitTimeAsync(200)}}const $i={imageSource:f.get("Tile01"),anchor:w(.5,.5),layoutConfiguration:{sizeLayoutConfiguration:{width:{value:10,unit:d.Percent},height:{value:10,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeWidth}}};class Yi extends H{constructor(i){i={...$i,...i},super(i),this.on("pointerup",e=>{console.log("click me: "+this.pos.x),this.kill()})}onInitialize(){const i=this._configuration.imageSource.toSprite();i.scale=this.layoutEngine.getCalculatedScale(this.configuration.imageSource),this.graphics.add(i)}onPreUpdate(i,e){}}class Ki extends K{constructor(i){super({width:i.width,height:i.height,collisionType:v.PreventCollision})}onInitialize(i){this.addTiles(i)}addTiles(i){const e=[f.get("Tile01"),f.get("Tile02"),f.get("Tile03")],t=i.screen.drawWidth,a=i.screen.drawHeight,l=.3,c=t*l,h=t*(1-l),B=a*.2,V=a*.5;let y=c,M=B,W,de=0;for(;M<=V;){for(;y<=h;){de=de+1;const ui=e[Math.floor(Math.random()*e.length)];W=new Yi({imageSource:ui}),W.pos=new u(y,M),this.addChild(W),y+=W.width;const ge=W;W.graphics.opacity=0,p.callAfterFrame(ge,this.tileEntrance.bind(this,ge,de))}y=c,M+=W.width/(384/128)}}async tileEntrance(i,e){await p.scaleUpAndFadeUpAsync(i,{duration:100,delay:3*e})}}class Ni extends G{constructor(){super();s(this,"_player");s(this,"_background");s(this,"_tileLevel")}async initializeAsync(){if(this.isInitialized)return Promise.resolve();await f.initializeAsync(),this.start(f.loader),await super.initializeAsync(),this.initializeBackground(),this.initializeLevel(),this.initializePlayer(),this.model.score.value=0,this.model.lives.value=3}onPreUpdate(e,t){super.onPreUpdate(e,t),this.handlePlayerInput(e,t)}initializeBackground(){this._background=new j({imageSource:f.get("Background02")}),this.currentScene.add(this._background)}initializeLevel(){this._tileLevel=new Ki({width:this.screen.resolution.width,height:this.screen.resolution.height}),this.currentScene.add(this._tileLevel)}initializePlayer(){this._player=new Ui,this._player.pos.x=this.screen.resolution.width/2,this._player.pos.y=this.screen.resolution.height-100,this.currentScene.add(this._player)}handlePlayerInput(e,t){(this.controller.left.wasPressed||this.controller.right.wasPressed)&&f.get("Hit01").play(),(this.controller.left.wasReleased||this.controller.right.wasReleased)&&f.get("Hit01").play(),this.controller.left.isHeld?(this._player.move(e,t,new u(-1,0)),this.model.score.value+=1):this.controller.right.isHeld&&(this._player.move(e,t,new u(1,0)),this.model.score.value+=1),this.controller.action.wasPressed&&f.get("Hit01").play()}onModelChanged(){this.model.lives.value==0&&console.log("Gameover")}}const I=new N;I.add(He,new o(He));I.add(De,new o(De));I.add(Ge,new o(Ge));I.add(Fe,new o(Fe));I.add(Ie,new o(Ie));I.add(Ve,new o(Ve));I.add(Me,new o(Me));I.add(P,new F(P));const m=I,ne=class ne extends K{constructor(){super({pos:w(150,150),width:50,height:50,collisionType:v.Passive,collisionGroup:ee.Player})}onInitialize(){const i=m.get("FrogIdle01").toSprite(),e=m.get("FrogJump01").toSprite();i.scale=w(2,2),e.scale=w(2,2),this.graphics.add("idle",i),this.graphics.add("jump",e),this.graphics.use("idle"),this.collider.set(new $({radius:Math.max(i.width,i.height)/2}))}async move(i,e,t){this.pos=this.pos.add(t.scale(ne.DistancePerJump)),this.rotation=t.toAngle()+Math.PI/2,this.graphics.use("jump"),await p.scaleUpAndDownAsync(this),await p.awaitTimeAsync(200),this.graphics.use("idle")}};s(ne,"DistancePerJump",40);let se=ne;class ji extends K{constructor(e){super({width:e.width,height:e.height,pos:e.pos,color:new z(100,20,20,1),collisionType:v.Passive});s(this,"direction");s(this,"speed");s(this,"_imageSource");s(this,"laneWidth");this.direction=e.direction,this._imageSource=e.imageSource,this.speed=e.speed,this.laneWidth=e.laneWidth}onInitialize(e){let t=this._imageSource.toSprite();t=si.resizeSpriteWithin(t,this.width,this.height),this.graphics.use(t)}onPreUpdate(e,t){this.pos.x+=this.direction*this.speed*t/1e3;const a=this.width+100;this.direction>0?this.pos.x>this.laneWidth+a&&(this.pos.x=-this.width-a):this.pos.x<-this.width-a&&(this.pos.x=this.laneWidth+a)}}class Jt extends K{constructor(e){super({width:e.width,height:e.height,pos:e.pos,color:e.color,collisionType:v.PreventCollision});s(this,"_imageSource");this._imageSource=e.imageSource}onInitialize(e){const l=this.height,c=this.width/3,h=Math.random()>.5?1:-1,B=Math.random()*50+50;for(let V=0;V<3;V++){if(Math.random()>.8)continue;let y;h>0?y=V*c-this.width:y=V*c;const M=new ji({width:80,height:l,imageSource:this._imageSource,pos:w(y,0),direction:h,speed:B,laneWidth:this.width});this.addChild(M)}}}class Ji extends K{constructor(e){super({width:e.width,height:e.height,collisionType:v.PreventCollision});s(this,"_distanceGapY",se.DistancePerJump)}onInitialize(e){this.addCars(),this.addLogs()}addCars(){const e=this.height-360;[m.get("Car01"),m.get("Car02")].forEach((a,l)=>{{const c=new Jt({imageSource:a,width:this.width,height:this._distanceGapY,color:new z(100,100,100,.3),pos:w(0,e-2*this._distanceGapY*l)});this.addChild(c)}})}addLogs(){const e=this.height-560;[m.get("Log01"),m.get("Log02"),m.get("Log01"),m.get("Log01"),m.get("Log02")].forEach((a,l)=>{{const c=new Jt({imageSource:a,width:this.width,height:this._distanceGapY,color:new z(100,100,100,.3),pos:w(0,e-this._distanceGapY*l)});this.addChild(c)}})}}class Xi extends G{constructor(){super();s(this,"_player");s(this,"_background");s(this,"_level")}async initializeAsync(){if(this.isInitialized)return Promise.resolve();await m.initializeAsync(),this.start(m.loader),await super.initializeAsync(),this.initializeBackground(),this.initializeLevel(),this.initializePlayer(),this.model.score.value=0,this.model.lives.value=3}initializeBackground(){this._background=new j({imageSource:m.get("Background01")}),this.currentScene.add(this._background)}initializeLevel(){this._level=new Ji({width:this.screen.resolution.width,height:this.screen.resolution.height}),this._level.pos.x=this.screen.resolution.width/2,this._level.pos.y=this.screen.resolution.height/2,this.currentScene.add(this._level)}initializePlayer(){this._player=new se,this._player.pos.x=this.screen.resolution.width/2,this._player.pos.y=this.screen.resolution.height-50,this.currentScene.add(this._player),this._player.z=1e4}handlePlayerInput(e,t){this.controller.left.wasPressed?(this._player.move(e,t,new u(-1,0)),m.get("Hit01").play()):this.controller.right.wasPressed?(this._player.move(e,t,new u(1,0)),m.get("Hit01").play()):this.controller.up.wasPressed?(this._player.move(e,t,new u(0,-1)),m.get("Hit01").play()):this.controller.down.wasPressed&&(this._player.move(e,t,new u(0,1)),m.get("Hit01").play()),this.controller.action.wasPressed}onPreUpdate(e,t){super.onPreUpdate(e,t),this.handlePlayerInput(e,t)}onModelChanged(){this.model.lives.value==0&&console.log("Gameover")}}const le=new N;le.add(Te,new o(Te));le.add(Re,new o(Re));le.add(P,new F(P));const D=le,ci={},Xt={...ci,outlineColor:new z(0,0,0,.8),outlineThickness:1},qt={...ci,shadowColor:new z(0,0,0,.5),shadowOffset:[1,1],shadowBlur:1};class he{static getMaterial_Outline(i=Xt){i={...Xt,...i};const e=i.outlineColor||z.Black,a=`#version 300 es
      precision mediump float;

      uniform sampler2D u_graphic;

      in vec2 v_uv;
      out vec4 fragColor;

      void main() {
        vec2 texSize = vec2(textureSize(u_graphic, 0));
        vec2 uv = v_uv;
        float thickness = ${(i.outlineThickness||2).toFixed(1)};

        vec4 outlineColor = vec4(${e.r}, ${e.g}, ${e.b}, ${e.a});
        vec4 texColor = texture(u_graphic, uv);

        float outline = 0.0;
        for (float y = -thickness; y <= thickness; y += 1.0) {
          for (float x = -thickness; x <= thickness; x += 1.0) {
            vec2 sampleUV = uv + vec2(x, y) / texSize;
            outline = max(outline, texture(u_graphic, sampleUV).a);
          }
        }

        outline = outline - texColor.a;
        vec4 outlineResult = mix(texColor, outlineColor, outline);
        fragColor = outlineResult;
      }
    `;return U.instance.graphicsContext.createMaterial({name:"outline",fragmentSource:a})}static getMaterial_DropShadow(i=qt){i={...qt,...i};const e=i.shadowColor||z.fromHex("#00000080"),t=i.shadowOffset||[4,4],a=i.shadowBlur||4,l=`#version 300 es
      precision mediump float;

      uniform sampler2D u_graphic;
      uniform vec2 u_resolution;

      in vec2 v_uv;
      out vec4 fragColor;

      void main() {
        vec2 texSize = vec2(textureSize(u_graphic, 0));
        vec2 uv = v_uv;
        vec2 offset = vec2(${t[0]}.0, ${t[1]}.0) / texSize;
        float blur = ${a.toFixed(1)};

        vec4 shadowColor = vec4(${e.r}, ${e.g}, ${e.b}, ${e.a});
        vec4 texColor = texture(u_graphic, uv);

        float shadow = 0.0;
        for (float y = -blur; y <= blur; y += 1.0) {
          for (float x = -blur; x <= blur; x += 1.0) {
            vec2 sampleUV = uv + offset + vec2(x, y) / texSize;
            shadow += texture(u_graphic, sampleUV).a;
          }
        }
        shadow /= (2.0 * blur + 1.0) * (2.0 * blur + 1.0);

        vec4 shadowResult = mix(vec4(0.0), shadowColor, shadow);
        fragColor = mix(shadowResult, texColor, texColor.a);
      }
    `;return U.instance.graphicsContext.createMaterial({name:"dropshadow",fragmentSource:l})}}const Qt={collisionType:v.Passive,collisionGroup:ee.Player,imageSource:D.get("KnightStatic01"),layoutConfiguration:{sizeLayoutConfiguration:{width:{value:30,unit:d.Percent},height:{value:30,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeHeight},positionLayoutConfiguration:{x:{value:50,unit:d.Percent},y:{value:50,unit:d.Percent},relativeTo:g.Screen}}};class qi extends H{constructor(e=Qt){e={...Qt,...e};super(e);s(this,"_moveSpeed",1e3);s(this,"_flipHorizontal",!1)}onInitialize(){const e=this.configuration.imageSource.toSprite();e.scale=this.layoutEngine.getCalculatedScale(this.configuration.imageSource),this.graphics.add(e),this.graphics.material=he.getMaterial_DropShadow(),this.collider.set(new $({radius:Math.max(e.width/2,e.height/2)}))}async move(e,t,a){a=a.scale(this._moveSpeed*(t/1e3)),this.pos=this.pos.add(a),a.x!==0&&(this._flipHorizontal=a.x>0,this.graphics.flipHorizontal=this._flipHorizontal),p.clearActions(this),p.scaleDownAndUpAsync(this),J.particlesAddDustAsync(this,{duration:100})}}const X={},Zt={...X,pixelSize:4,colorLevels:5,scanlineIntensity:.1,bulgeIntensity:-.2};class Qi{static getPostProcessor_ColorBlindness(i=X){return i={...X,...i},new Ci(Si.Deuteranope,!0)}static getPostProcessor_GrayScale(i=X){return i={...X,...i},new class{constructor(){s(this,"_shader")}initialize(t){this._shader=new _e(t,`#version 300 es
        precision mediump float;
        // our texture
        uniform sampler2D u_image;
        // the texCoords passed in from the vertex shader.
        in vec2 v_texcoord;
        out vec4 fragColor;
        void main() {
          vec4 tex = texture(u_image, v_texcoord);
          float avg = 0.2126 * tex.r + 0.7152 * tex.g + 0.0722 * tex.b;
          fragColor = vec4(avg, avg, avg, 1.0);
        }`)}getLayout(){return this._shader.getLayout()}getShader(){return this._shader.getShader()}}}static getPostProcessor_Retro(i=Zt){i={...Zt,...i};const e=i.pixelSize||4,t=i.colorLevels||5,a=i.scanlineIntensity||.1,l=i.bulgeIntensity||.1;return new class{constructor(){s(this,"_shader")}initialize(h){this._shader=new _e(h,`#version 300 es
        precision mediump float;
        uniform sampler2D u_image;
        uniform vec2 u_resolution;
        in vec2 v_texcoord;
        out vec4 fragColor;

        vec2 bulge(vec2 uv) {
          vec2 center = vec2(0.5, 0.5);
          vec2 d = uv - center;
          float r = length(d);
          float bulgeAmount = ${l};
          
          // Adjust the bulge function to be less pronounced near the edges
          float bulge = 1.0 + bulgeAmount * (1.0 - r * r);
          
          // Smoothstep to further reduce the effect near the edges
          float edgeFade = smoothstep(0.7, 0.0, r);
          bulge = mix(1.0, bulge, edgeFade);
          
          return center + d * bulge;
        }

        void main() {
          vec2 uv = v_texcoord;
          
          // Apply screen bulge
          uv = bulge(uv);
          
          // Pixelation
          vec2 pixels = vec2(${e}.0, ${e}.0);
          uv = floor(uv * u_resolution / pixels) * pixels / u_resolution;
          
          vec4 tex = texture(u_image, uv);
          
          // Color quantization
          float colorLevels = ${t}.0;
          tex = floor(tex * colorLevels) / colorLevels;
          
          // Scanline effect
          float scanline = sin(uv.y * u_resolution.y * 2.0) * ${a};
          tex.rgb -= scanline;

          fragColor = tex;
        }`)}getLayout(){return this._shader.getLayout()}getShader(){return this._shader.getShader()}}}}class Zi extends G{constructor(){super();s(this,"_player");s(this,"_background")}async initializeAsync(){if(this.isInitialized)return Promise.resolve();await D.initializeAsync(),this.start(D.loader),await super.initializeAsync(),this.initializeBackground(),this.initializePlayer(),this.model.score.value=0,this.model.lives.value=3,this.model.gameState.value=_.GameInitialized,Qi.getPostProcessor_GrayScale()}initializeBackground(){const e={imageSource:D.get("Background01"),isScrolling:!1};this._background=new j(e),this.currentScene.add(this._background)}initializePlayer(){this._player=new qi,this.currentScene.add(this._player)}handlePlayerInput(e,t){this.controller.left.wasPressed?(this._player.move(e,t,new u(-1,0)),D.get("Hit01").play(),this.model.score.value+=1):this.controller.right.wasPressed?(this._player.move(e,t,new u(1,0)),D.get("Hit01").play(),this.model.score.value+=1):this.controller.up.wasPressed?(this._player.move(e,t,new u(0,-1)),D.get("Hit01").play(),this.model.score.value+=1):this.controller.down.wasPressed&&(this._player.move(e,t,new u(0,1)),D.get("Hit01").play(),this.model.score.value+=1),this.controller.action.wasPressed&&(D.get("Hit01").play(),this.model.lives.value-=1)}onPreUpdate(e,t){super.onPreUpdate(e,t),this.handlePlayerInput(e,t)}onModelChanged(){this.model.lives.value==0&&console.log("Gameover")}}var ue=(r=>(r[r.Hearts=0]="Hearts",r[r.Diamonds=1]="Diamonds",r[r.Clubs=2]="Clubs",r[r.Spades=3]="Spades",r))(ue||{});class ea{constructor(i,e){this.suit=i,this.value=e}get displayValue(){switch(this.value){case 1:return"A";case 11:return"J";case 12:return"Q";case 13:return"K";default:return this.value.toString()}}}class ta extends N{constructor(){super()}getCardFrontByCard(i){const e=i.value<10?`0${i.value.toString()}`:i.value.toString(),t=`CardFront_Suit${ue[i.suit]}_Value${e}`;return this.has(t)||console.log(`ERROR:Check assets. ImageSource not found for ${t}`),this.get(t)}}const n=new ta;n.add(Le,new o(Le));n.add(Be,new o(Be));n.add(We,new o(We));n.add(Oe,new o(Oe));n.add(Ee,new o(Ee));n.add(Ue,new o(Ue));n.add($e,new o($e));n.add(Ye,new o(Ye));n.add(Ke,new o(Ke));n.add(Ne,new o(Ne));n.add(je,new o(je));n.add(Je,new o(Je));n.add(Xe,new o(Xe));n.add(qe,new o(qe));n.add(Qe,new o(Qe));n.add(Ze,new o(Ze));n.add(et,new o(et));n.add(tt,new o(tt));n.add(it,new o(it));n.add(at,new o(at));n.add(st,new o(st));n.add(ot,new o(ot));n.add(rt,new o(rt));n.add(nt,new o(nt));n.add(lt,new o(lt));n.add(dt,new o(dt));n.add(ct,new o(ct));n.add(ht,new o(ht));n.add(ut,new o(ut));n.add(pt,new o(pt));n.add(gt,new o(gt));n.add(_t,new o(_t));n.add(wt,new o(wt));n.add(mt,new o(mt));n.add(yt,new o(yt));n.add(ft,new o(ft));n.add(vt,new o(vt));n.add(Ct,new o(Ct));n.add(St,new o(St));n.add(Pt,new o(Pt));n.add(At,new o(At));n.add(xt,new o(xt));n.add(zt,new o(zt));n.add(bt,new o(bt));n.add(kt,new o(kt));n.add(Ht,new o(Ht));n.add(Dt,new o(Dt));n.add(Gt,new o(Gt));n.add(Ft,new o(Ft));n.add(It,new o(It));n.add(Vt,new o(Vt));n.add(Mt,new o(Mt));n.add(Tt,new o(Tt));n.add(Rt,new o(Rt));n.add(Lt,new o(Lt));n.add(Bt,new o(Bt));n.add(Wt,new o(Wt));n.add(Ot,new o(Ot));n.add(Et,new o(Et));n.add(Ut,new o(Ut));n.add($t,new o($t));n.add(P,new F(P));const k=n;class ia{constructor(){s(this,"cards",[]);this.initializeDeck()}initializeDeck(){for(let i of Object.values(ue).filter(e=>typeof e=="number"))for(let e=1;e<=13;e++)this.cards.push(new ea(i,e))}shuffle(){for(let i=this.cards.length-1;i>0;i--){const e=Math.floor(Math.random()*(i+1));[this.cards[i],this.cards[e]]=[this.cards[e],this.cards[i]]}}drawCard(){return this.cards.pop()}}class aa{constructor(){s(this,"cards",[])}addCard(i){this.cards.push(i)}getCards(){return this.cards}getScore(){let i=0,e=0;for(const t of this.cards)t.value===1?(e++,i+=11):i+=Math.min(t.value,10);for(;i>21&&e>0;)i-=10,e--;return i}clear(){this.cards=[]}}class ei{constructor(i,e=new aa){this.name=i,this.hand=e}}const sa={imageSourceCardBack:k.get("CardBack01"),imageSourceCardFront:k.get("CardBack01"),imageSource:k.get("CardBack01"),isFront:!1,layoutConfiguration:{sizeLayoutConfiguration:{width:{value:20,unit:d.Percent},height:{value:20,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeHeight}}};class oa extends H{constructor(e){super(sa);s(this,"_moveSpeed",3e3);s(this,"_card");s(this,"_isFront",!1);this._card=e,this.isFront=this.configuration.isFront}get isFront(){return this._isFront}get card(){return this._card}set isFront(e){this._isFront=e,this.updateVisuals()}get configuration(){return this._configuration}onInitialize(){this.updateVisuals()}updateVisuals(){this.configuration.imageSourceCardFront=k.getCardFrontByCard(this._card);const e=this.isFront?this.configuration.imageSourceCardFront.toSprite():this.configuration.imageSourceCardBack.toSprite();e.scale=this.layoutEngine.getCalculatedScale(this.configuration.imageSource),this.graphics.add(e),this.collider.set(new $({radius:Math.max(e.width/2,e.height/2)}))}async move(e,t,a){a=a.scale(this._moveSpeed*(t/1e3)),this.pos=this.pos.add(a),p.scaleDownAndUpAsync(this),J.particlesAddDustAsync(this,{duration:100})}}class R{}s(R,"CardWidthPercentage",20),s(R,"CardHeightPercentage",20);const ra={name:"Deck",imageSource:k.get("CardBack05"),layoutConfiguration:{sizeLayoutConfiguration:{width:{value:R.CardWidthPercentage,unit:d.Percent},height:{value:R.CardHeightPercentage,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeHeight},positionLayoutConfiguration:{x:{value:15,unit:d.Percent},y:{value:10,unit:d.Percent},relativeTo:g.Screen}}};class na extends H{constructor(e){super(ra);s(this,"_deck");this._deck=e,this.name="My deck"}drawCard(e){const t=this._deck.drawCard();if(t){const a=new oa(t);return a.pos=this.pos.clone(),a.isFront=e,this.addChild(a),a}}}const la={name:"Dealer",imageSource:k.get("CardBack03"),positionOffsetPercentage:w(.3,0),layoutConfiguration:{sizeLayoutConfiguration:{width:{value:R.CardWidthPercentage,unit:d.Percent},height:{value:R.CardHeightPercentage,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeHeight},positionLayoutConfiguration:{x:{value:40,unit:d.Percent},y:{value:20,unit:d.Percent},relativeTo:g.Screen}}},da={name:"Player",imageSource:k.get("CardBack04"),positionOffsetPercentage:w(.3,0),layoutConfiguration:{sizeLayoutConfiguration:{width:{value:R.CardWidthPercentage,unit:d.Percent},height:{value:R.CardHeightPercentage,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeHeight},positionLayoutConfiguration:{x:{value:60,unit:d.Percent},y:{value:80,unit:d.Percent},relativeTo:g.Screen}}};class ti extends H{constructor(e,t){super(t);s(this,"_cardActors");s(this,"_player");this._cardActors=[],this._player=e}get cardActors(){return this._cardActors}get player(){return this._player}get configuration(){return this._configuration}onInitialize(e){super.onInitialize(e),console.log(this._player.name,this.pos)}clearCardActors(){this._cardActors.forEach(e=>e.kill())}async addCardActorAsync(e){this._cardActors.push(e);const t=this.pos.add(this.configuration.positionOffsetPercentage.scale(this.width*this.cardActors.length));await p.moveToAsync(e,t,{duration:200})}}class ca extends G{constructor(){super();s(this,"_background");s(this,"_deckActor");s(this,"_playerHandActor");s(this,"_dealerHandActor")}async initializeAsync(){if(this.isInitialized)return Promise.resolve();await k.initializeAsync(),this.start(k.loader),await super.initializeAsync(),this.initializeBackground(),this.initializeGame(),this.model.score.value=0,this.model.lives.value=3,this.model.gameState.value=_.GameInitialized}initializeBackground(){const e={imageSource:k.get("Background01"),isScrolling:!1};this._background=new j(e),this.currentScene.add(this._background)}initializeGame(){const e=new ia;this._deckActor=new na(e),this.currentScene.add(this._deckActor);const t=new ei("Player"),a=new ei("Dealer");this._playerHandActor=new ti(t,da),this.currentScene.add(this._playerHandActor),this._dealerHandActor=new ti(a,la),this.currentScene.add(this._dealerHandActor),this.startNewRound()}async startNewRound(){this._playerHandActor.clearCardActors(),this._dealerHandActor.clearCardActors(),await this.dealCardToPlayer(this._playerHandActor,!0),await this.dealCardToPlayer(this._dealerHandActor,!1),await this.dealCardToPlayer(this._playerHandActor,!0),await this.dealCardToPlayer(this._dealerHandActor,!0),this.updateScore()}async dealCardToPlayer(e,t){const a=this._deckActor.drawCard(t);a&&e.addCardActorAsync(a)}updateScore(){this.model.score.value=this._playerHandActor.player.hand.getScore()}async dealerTurn(){for(this._dealerHandActor.cardActors[0].isFront=!1;this._dealerHandActor.player.hand.getScore()<17;)await new Promise(e=>setTimeout(e,1e3)),await this.dealCardToPlayer(this._dealerHandActor,!0)}async endRound(e){await this.dealerTurn(),e?this.model.lives.value+=1:this.model.lives.value-=1,this.model.lives.value<=0?this.gameOver():setTimeout(()=>this.startNewRound(),2e3)}gameOver(){console.log("Game Over"),this.model.gameState.value!==_.GameEnded&&(this.model.gameState.value=_.GameEnded)}handlePlayerInput(e,t){this.controller.action.wasPressed&&this.handlePlayerAction()}async handlePlayerAction(){await this.dealCardToPlayer(this._playerHandActor,!0),this.updateScore(),this._playerHandActor.player.hand.getScore()>21?this.endRound(!1):this._playerHandActor.player.hand.getScore()===21&&this.endRound(!0)}onPreUpdate(e,t){super.onPreUpdate(e,t),this.handlePlayerInput(e,t)}onModelChanged(){this.model.lives.value==0&&this.gameOver()}}class ha{constructor(){s(this,"_isInitialized",!1);s(this,"_gameIndex",0);s(this,"_gameCurrent");s(this,"_games",[])}get isInitialized(){return this._isInitialized}get gameCount(){return this._games.length}get gameCurrent(){return this._gameCurrent}requireIsInitialized(){throw new Error("Method not implemented.")}async initializeAsync(){}addGame(i){this._games.push(i)}async showNextGameAsync(){let i=this._gameIndex+1;i>=this._games.length&&(i=0),await this.loadGameAtIndexAsync(i)}async showPreviousGameAsync(){let i=this._gameIndex-1;i<0&&(i=this._games.length-1),await this.loadGameAtIndexAsync(i)}async showGameAtIndexAsync(i){await this.loadGameAtIndexAsync(i)}async loadGameAtIndexAsync(i){var a;let e=null;this._gameCurrent&&(console.log("Warning: Disposing an existing game is not working!"),e=this._gameCurrent.canvas.cloneNode(),(a=this._gameCurrent)==null||a.dispose()),await p.awaitTimeAsync(200),e&&document.body.appendChild(e);const t=this._games[i];this._gameCurrent=new t,U.instance=this._gameCurrent,await this._gameCurrent.initializeAsync()}}const te=new N;te.add(Yt,new o(Yt));te.add(Kt,new o(Kt));te.add(Nt,new o(Nt));te.add(P,new F(P));const O=te,ua=Y.create("DonkeyKongPlayer"),pe=Y.create("DonkeyKongPlatform"),hi=Y.create("DonkeyKongBarrel"),pa=Z.collidesWith([pe,hi]),ga=Z.collidesWith([pe]),oe={Player:pa,Barrel:ga,PlayerGroup:ua,PlatformGroup:pe,BarrelGroup:hi},ii={collisionType:v.Active,collisionGroup:oe.Player,imageSource:O.get("Hero01"),layoutConfiguration:{sizeLayoutConfiguration:{width:{value:10,unit:d.Percent},height:{value:10,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeHeight},positionLayoutConfiguration:{x:{value:50,unit:d.Percent},y:{value:10,unit:d.Percent},relativeTo:g.Screen}}};class _a extends H{constructor(e=ii){e={...ii,...e};super(e);s(this,"_moveSpeedX",18e3);s(this,"_moveSpeedY",G.GravityY*150);s(this,"_flipHorizontal",!1);s(this,"_isOnGround",!1)}get canJump(){return this._isOnGround}get canMove(){return this._isOnGround}onInitialize(e){super.onInitialize(e),this.graphics.material=he.getMaterial_DropShadow(),this.on("collisionstart",this.onCollisionStart.bind(this)),this.on("collisionend",this.onCollisionEnd.bind(this))}async move(e,t,a){const l=a.scale(this._moveSpeedX*(t/1e3));this.body.applyLinearImpulse(l),a.x!==0&&(this._flipHorizontal=a.x>0,this.graphics.flipHorizontal!=this._flipHorizontal&&(this.graphics.flipHorizontal=this._flipHorizontal,J.particlesAddDustAsync(this,{duration:100})))}jump(e,t,a){const l=a.scale(this._moveSpeedY*(t/1e3));this.body.applyLinearImpulse(l)}onCollisionStart(e){const{other:t,side:a,contact:l}=e;t&&t.body.group==oe.PlatformGroup&&(this._isOnGround=!0)}onCollisionEnd(e){const{other:t,side:a,contact:l}=e;t&&t.body.group==oe.PlatformGroup&&(this._isOnGround=!1)}}const ai={collisionType:v.Fixed,collisionGroup:oe.PlatformGroup,anchor:w(.5,.5),imageSource:O.get("Platform01"),layoutConfiguration:{sizeLayoutConfiguration:{width:{value:80,unit:d.Percent},height:{value:80,unit:d.Percent},relativeTo:g.Screen,scaleAspectRatio:b.PrioritizeWidth},positionLayoutConfiguration:{x:{value:50,unit:d.Percent},y:{value:50,unit:d.Percent},relativeTo:g.Screen}}};class ie extends H{constructor(i=ai){i={...ai,...i},super(i)}onInitialize(i){super.onInitialize(i),this.graphics.material=he.getMaterial_DropShadow()}}class wa extends G{constructor(){super();s(this,"_player");s(this,"_platforms",[]);s(this,"_background")}async initializeAsync(){if(this.isInitialized)return Promise.resolve();await O.initializeAsync(),this.start(O.loader),await super.initializeAsync(),await this.initializeBackground(),await this.initializeLevel(),await this.initializePlayer(),await p.awaitNextFrameAsync(),this._player.body.collisionType=v.Active,this._player.body.friction=1,this._player.body.limitDegreeOfFreedom=[Pi.Rotation],this.model.score.value=0,this.model.lives.value=3,this.model.gameState.value=_.GameInitialized}initializeBackground(){const e={imageSource:O.get("Background01"),isScrolling:!1};this._background=new j(e),this.currentScene.add(this._background)}async initializeLevel(){this._platforms.push(new ie({rotation:.1})),this._platforms.push(new ie({rotation:-.1})),this._platforms.push(new ie({rotation:.1})),this._platforms.push(new ie({rotation:-.1})),this._platforms.forEach(async(a,l)=>{this.currentScene.add(a)});const e=.2,t=.2;await p.awaitNextFrameAsync(),this._platforms.forEach(async(a,l)=>{a.pos.y=this.drawHeight*(e+t*l)})}async initializePlayer(){this._player=new _a,this.currentScene.add(this._player)}handlePlayerInput(e,t){(this._player.canMove&&this.controller.left.wasPressed||this.controller.right.wasPressed)&&(this.controller.up.wasPressed||this.controller.down.wasPressed||this._player.move(e,t,new u(0,1)),O.get("Hit01").play()),this._player.canMove&&this.controller.left.isHeld?this._player.move(e,t,new u(-1,0)):this._player.canMove&&this.controller.right.isHeld&&this._player.move(e,t,new u(1,0)),this._player.canJump&&this.controller.up.isHeld?this._player.jump(e,t,new u(0,-1)):this.controller.down.isHeld,this.controller.action.wasPressed&&(O.get("Hit01").play(),this.model.lives.value-=1)}onPreUpdate(e,t){super.onPreUpdate(e,t),this.handlePlayerInput(e,t)}onModelChanged(){this.model.lives.value==0&&console.log("Gameover")}}const S=new ha;S.addGame(Ei);S.addGame(Ni);S.addGame(Xi);S.addGame(ca);S.addGame(wa);S.addGame(Zi);(async()=>{await S.initializeAsync();let r=Math.round(Math.random()*(S.gameCount-1));r=0,r=S.gameCount-1,await S.showGameAtIndexAsync(r);const i=new Ai(S.gameCurrent);i.collider={showAll:!0,showBounds:!0,boundsColor:new z(0,255,0,.5),showOwner:!0,showGeometry:!0,geometryColor:new z(255,0,255,.5),geometryLineWidth:1,geometryPointSize:1},S.gameCurrent.debug=i})();
